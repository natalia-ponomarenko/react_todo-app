{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoFilter/TodoFilter.jsx","components/TodoApp/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","todo","deleteTodo","toggleTodoComplete","key","id","className","completed","type","checked","onChange","title","onClick","TodoList","todos","map","defaultProps","TodoFilter","href","TodoApp","useState","setTitle","setTodos","addTodo","newtitle","newTodo","Date","console","log","onSubmit","event","preventDefault","placeholder","value","target","filteredTodos","some","htmlFor","todoId","prevTodos","filter","selectedTodo","find","item","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9adde0e4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo, deleteTodo, toggleTodoComplete }) => {\n  const handleToggleComplete = () => {\n    toggleTodoComplete(todo);\n  };\n\n  return (\n    <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={handleToggleComplete}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(todo.id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  toggleTodoComplete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ todos, deleteTodo, toggleTodoComplete }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        deleteTodo={deleteTodo}\n        toggleTodoComplete={toggleTodoComplete}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ),\n  deleteTodo: PropTypes.func.isRequired,\n  toggleTodoComplete: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\n\nexport const TodoFilter = ({ todos }) => {\n  return (\n    <ul className=\"filters\">\n    <li>\n      <a href=\"#/\" className=\"selected\">All</a>\n    </li>\n\n    <li>\n      <a href=\"#/active\">Active</a>\n    </li>\n\n    <li>\n      <a href=\"#/completed\">Completed</a>\n    </li>\n  </ul>\n  );\n}\n","import React, { useState } from 'react';\nimport { TodoList } from '../TodoList/TodoList';\nimport { TodoFilter } from '../TodoFilter/TodoFilter';\n\nexport const TodoApp = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  const toggleAllTodos = () => {\n    let filteredTodos;\n\n    if (todos.some(todo => todo.completed === false)) {\n      filteredTodos\n        = todos.map(todo => ({\n          ...todo,\n          completed: true,\n        }));\n    } else {\n      filteredTodos\n        = todos.map(todo => ({\n          ...todo,\n          completed: false,\n        }));\n    }\n\n    setTodos(filteredTodos);\n  };\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n\n    setTitle(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    addTodo(title);\n    setTitle('');\n  };\n\n  const addTodo = (newtitle) => {\n    if (newtitle !== '') {\n      const newTodo = {\n        id: +new Date(),\n        title: newtitle,\n        completed: false,\n      };\n\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const deleteTodo = (todoId) => {\n    setTodos(prevTodos => prevTodos.filter(\n      todo => todo.id !== todoId,\n    ));\n  };\n\n  const toggleTodoComplete = (todo) => {\n    const selectedTodo = todos.find(item => todo.id === item.id);\n\n    selectedTodo.completed = !selectedTodo.completed;\n    setTodos([...todos]);\n  };\n\n  const clearCompletedTodos = () => {\n    setTodos(prevTodos => prevTodos.filter(\n      todo => todo.completed !== true,\n    ));\n  };\n\n  console.log(todos);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={handleInputChange}\n        />\n      </form>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={toggleAllTodos}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as completed</label>\n      </section>\n\n      <TodoList\n        todos={todos}\n        deleteTodo={deleteTodo}\n        toggleTodoComplete={toggleTodoComplete}\n      />\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todos.filter(todo => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n        <TodoFilter todos={todos} />\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompletedTodos}\n        >\n          Clear completed\n        </button>\n      </footer>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp />\n      </header>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}